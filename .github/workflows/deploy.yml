name: Node CI

on:
  push:
    branches:
      - master

jobs:
  install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js v22.15.0
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'

      - name: Cache NPM and node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Run install task
        run: npm ci

      - name: Create .env
        run: |
          echo "HCAPTCHA_SECRET=${{ secrets.HCAPTCHA_SECRET }}" >> .env
          echo "HCAPTCHA_SITEKEY=${{ secrets.HCAPTCHA_SITEKEY }}" >> .env
          echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env

      - name: Install Composer
        run: |
          sudo apt update
          sudo apt install -y curl php-cli unzip
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer

      - name: Install PHP dependencies (phpdotenv)
        run: |
          composer install --no-dev --optimize-autoloader

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run build task
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: build-artifact
          path: build
          retention-days: 7

  deploy:
    runs-on: ubuntu-22.04
    needs: install
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build/

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          ARGS: -rlgoDzvc --delete --exclude='.ssh/'
          SOURCE: ./build/
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: ~/
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
